version: '3'

services:
  backend-app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: bash -c "python3 croissant/manage.py makemigrations && python3 croissant/manage.py migrate && python3 croissant/manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=croissant
    volumes:
      - postgres_data:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db

  frontend-app:
    build:
      context: .
      dockerfile: frontend/app/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/frontend
    environment:
      - NODE_ENV=development
volumes:
  postgres_data: